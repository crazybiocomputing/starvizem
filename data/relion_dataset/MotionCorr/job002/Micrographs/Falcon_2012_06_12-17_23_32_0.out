
Usage: MotionCor2 Tags
-InMrc    
  1. Input MRC file that stores dose fractionated stacks.
  2. It can be a MRC file containing a single stack collected
     in Leginon or multiple stacks collected in UcsfTomo.
  3. It can also be the path of a folder containing multiple
     MRC files when -Serial option is turned on.

-InTiff   
  1. Input TIFF file that stores a dose fractionated stack.
-OutMrc   
  1. Output MRC file that stores the frame sum.
  2. It can be either a MRC file name or the prefix of a series
     MRC files when -Serial option is turned on.

-ArcDir   
 1. Path of the archive folder that holds the archived raw
    stacks with each pixel packed into 4 bits.
 2. The archived stacks are saved in MRC file with the gain
    reference saved in the extended header.
 3. The rotated and/or flipped gain reference will be saved
    if -RotGain and or -FlipGain are enabled.

-Serial   
  1. Serial-processing all MRC files in a given folder whose
     name should be specified following -InMrc.
  2. The output MRC file name emplate should be provided
     folllowing -OutMrc
  3. 1 - serial processing, 0 - single processing, default.
  4. This option is only for single-particle stack files.

-Gain     
   MRC file that stores the gain reference. If not
   specified, MRC extended header will be visited
   to look for gain reference.

-TmpFile  
   Temporary image file for debugging.

-LogFile  
   Log file storing alignment data.

-Patch    
   Number of patches to be used for patch based
   alignment, default 0 0 corresponding full frame
   alignment.

-MaskCent 
   Center of subarea that will be used for alignement,
   default 0 0 corresponding to the frame center.

-MaskSize 
   The size of subarea that will be used for alignment,
   default 1.0 1.0 corresponding full size.

-Iter     
   Maximum iterations for iterative alignment,
   default 5 iterations.

-Tol      
   Tolerance for iterative alignment,
   default 0.5 pixel.

-Bft      
   B-Factor for alignment, default 100.

-StackZ   
   Number of frames per stack. If not specified,
   it will be loaded from MRC header.

-FtBin    
   Binning performed in Fourier space, default 1.0.

-InitDose 
   Initial dose received before stack is acquired

-FmDose   
   Frame dose in e/A^2. If not specified, dose
   weighting will be skipped.

-PixSize  
   Pixel size in A of input stack in angstrom. If not
   specified, dose weighting will be skipped.

-kV       
   High tension in kV needed for dose weighting.
   Default is 300.

-Align    
   Generate aligned sum (1) or simple sum (0)

-Throw    
   Throw initial number of frames, default is 0

-Trunc    
   Truncate last number of frames, default is 0

-Group    
   Group every specified number of frames by adding
   them together. The alignment is then performed
   on the summed frames. By default, no grouping
   is performed.

-Crop     
   1. Crop the loaded frames to the given size.
   2. By default the original size is loaded.

-FmRef    
   Specify which frame to be the reference to which
   all other frames are aligned. By default (-1) the
   the central frame is chosen. The central frame is
   at N/2 based upon zero indexing where N is the
   number of frames that will be summed, i.e., not
   including the frames thrown away.

-Tilt     
   Specify the starting angle and the step angle of tilt
   series. They are required for dose weighting. If not
   given, dose weighting will be disabled.

-RotGain  
   Rotate gain reference counter-clockwise.
   0 - no rotation, default,
   1 - rotate 90 degree,
   2 - rotate 180 degree,
   3 - rotate 270 degree.

-FlipGain 
   Flip gain reference after gain rotation.
   0 - no flipping, default,
   1 - flip upside down, 
   2 - flip left right.

-Mag      
   1. Correct anisotropic magnification by stretching
      image along the major axis, the axis where the
      lower magificantion is detected.
   2. Three inputs are needed including magnifications
      along major and minor axes and the angle of the
      major axis relative to the image x-axis in degree.
   3. By default no correction is performed.

-Gpu      
   GPU IDs. Default 0.
   For multiple GPUs, separate IDs by space.
   For example, -Gpu 0 1 2 3 specifies 4 GPUs.


MotionCor2: Build Nov. 14, 2016

-InMrc      Micrographs/Falcon_2012_06_12-17_23_32_0_movie.mrcs
-InTiff     
-InSuffix   
-OutMrc     MotionCorr/job002/Micrographs/Falcon_2012_06_12-17_23_32_0.mrc
-ArcDir     
-Gain       
-TmpFile    
-LogFile    
-Serial     0
-MaskCent   0.000000  0.000000
-MaskSize   1.000000  1.000000
-Patch      5  5
-Iter       7
-Tol        0.500000
-Bft        150.000000
-StackZ     0
-FtBin      1.000000
-InitDose   0.000000
-FmDose     1.000000
-PixSize    3.540000
-kV         300
-Throw      0
-Trunc      0
-Group      1
-FmRef      -1
-OutStack   1
-RotGain    0
-FlipGain   0
-Align      1
-Tilt       0.000000  0.000000
-Mag        1.000000  1.000000  0.000000
-Crop       0  0
-Gpu        0

GPU 0 memory: 8113 MB

CLoadGain: load gain reference from header.
Info: invalid gain reference from header.
   Image size is 1950 x 1950, gain bytes must be 15210000, mismatching header gain bytes 0.

Gain has not been found.

Stack size: 1950  1950  16
Stack mode: 2
Stack 0001 has been loaded, 0 stacks left.


Align thread has been started.

Gain ref not found.
Convert stack mode to float only.

Start to detect bad and hot pixels.
Sum frame    1 to   16 on GPU  0

Calculate statistics.
CC Mean Std: 1.815e-01  1.314e-01
Number of defect patches: 0
CC: >= 0.970

Min Max Mean Std:    34809.74 58923.27 47930.93  1736.86
Num Hot pixels:      1
Hot pixel threshold: 58352.10

Start to correct bad and hot pixels.
...... correct bad pixels of frame 1 to 16

Patch based alignment
Fourier transform of entire stack, please wait.
Fourier transform entire stack, done.

Full-frame alignment has been started.
Iteration ( 1) Error 0.559214
Iteration ( 2) Error 0.009910
Total Iterations: 2  Error: 0.009910

Full-frame alignment shift
...... Frame (  1) shift:     0.00      0.00
...... Frame (  2) shift:    -0.21     -0.29
...... Frame (  3) shift:    -0.34     -0.25
...... Frame (  4) shift:    -0.41     -0.31
...... Frame (  5) shift:    -0.38     -0.34
...... Frame (  6) shift:    -0.51     -0.38
...... Frame (  7) shift:    -0.42     -0.42
...... Frame (  8) shift:    -0.66     -0.41
...... Frame (  9) shift:    -0.51     -0.40
...... Frame ( 10) shift:    -0.46     -0.42
...... Frame ( 11) shift:    -0.45     -0.35
...... Frame ( 12) shift:    -0.33     -0.40
...... Frame ( 13) shift:    -0.49     -0.44
...... Frame ( 14) shift:    -0.41     -0.42
...... Frame ( 15) shift:    -0.52     -0.56
...... Frame ( 16) shift:    -0.45     -0.69

Full-frame shifts have been corrected.
Start to align patches.

Align patch 1, 24 left
Iteration ( 1) Error 0.637289
Iteration ( 2) Error 0.101327
Total Iterations: 2  Error: 0.101327


Align patch 2, 23 left
Iteration ( 1) Error 0.714934
Iteration ( 2) Error 0.075266
Total Iterations: 2  Error: 0.075266


Align patch 3, 22 left
Iteration ( 1) Error 0.717317
Iteration ( 2) Error 0.092737
Total Iterations: 2  Error: 0.092737


Align patch 4, 21 left
Iteration ( 1) Error 0.388204
Total Iterations: 1  Error: 0.388204


Align patch 5, 20 left
Iteration ( 1) Error 0.784285
Iteration ( 2) Error 0.091203
Total Iterations: 2  Error: 0.091203


Align patch 6, 19 left
Iteration ( 1) Error 0.605956
Iteration ( 2) Error 0.053448
Total Iterations: 2  Error: 0.053448


Align patch 7, 18 left
Iteration ( 1) Error 0.727058
Iteration ( 2) Error 0.116656
Total Iterations: 2  Error: 0.116656


Align patch 8, 17 left
Iteration ( 1) Error 0.397839
Total Iterations: 1  Error: 0.397839


Align patch 9, 16 left
Iteration ( 1) Error 0.488355
Total Iterations: 1  Error: 0.488355


Align patch 10, 15 left
Iteration ( 1) Error 0.595679
Iteration ( 2) Error 0.101356
Total Iterations: 2  Error: 0.101356


Align patch 11, 14 left
Iteration ( 1) Error 0.559193
Iteration ( 2) Error 0.063233
Total Iterations: 2  Error: 0.063233


Align patch 12, 13 left
Iteration ( 1) Error 0.496089
Total Iterations: 1  Error: 0.496089


Align patch 13, 12 left
Iteration ( 1) Error 0.426361
Total Iterations: 1  Error: 0.426361


Align patch 14, 11 left
Iteration ( 1) Error 0.571151
Iteration ( 2) Error 0.059650
Total Iterations: 2  Error: 0.059650


Align patch 15, 10 left
Iteration ( 1) Error 0.520044
Iteration ( 2) Error 0.046892
Total Iterations: 2  Error: 0.046892


Align patch 16, 9 left
Iteration ( 1) Error 0.464660
Total Iterations: 1  Error: 0.464660


Align patch 17, 8 left
Iteration ( 1) Error 0.418981
Total Iterations: 1  Error: 0.418981


Align patch 18, 7 left
Iteration ( 1) Error 0.454792
Total Iterations: 1  Error: 0.454792


Align patch 19, 6 left
Iteration ( 1) Error 0.512952
Iteration ( 2) Error 0.044556
Total Iterations: 2  Error: 0.044556


Align patch 20, 5 left
Iteration ( 1) Error 0.652980
Iteration ( 2) Error 0.032835
Total Iterations: 2  Error: 0.032835


Align patch 21, 4 left
Iteration ( 1) Error 0.517158
Iteration ( 2) Error 0.065866
Total Iterations: 2  Error: 0.065866


Align patch 22, 3 left
Iteration ( 1) Error 0.580387
Iteration ( 2) Error 0.064928
Total Iterations: 2  Error: 0.064928


Align patch 23, 2 left
Iteration ( 1) Error 0.516506
Iteration ( 2) Error 0.071472
Total Iterations: 2  Error: 0.071472


Align patch 24, 1 left
Iteration ( 1) Error 0.392353
Total Iterations: 1  Error: 0.392353


Align patch 25, 0 left
Iteration ( 1) Error 0.566708
Iteration ( 2) Error 0.074100
Total Iterations: 2  Error: 0.074100

3D Fitting completed.

Correct local motion, please wait.
Local motion has been corrected.

Process thread exits.

Computational time: 20.577271 sec
Total time: 21.702797 sec
